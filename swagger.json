{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0",
    "title" : "ELBHO Vehicles API",
    "description" : "ELBHO Offers vehicles to their advisors which they can use to travel. This API allows you to request a claim on a vehicle, request which vehicles are available and which are claimed"
  },
  "paths" : {
    "/vehicles" : {
      "get" : {
        "description" : "Retrieves all vehicles",
        "tags" : [ "Vehicle" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicle"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No vehicles found"
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/{vehicle-id}" : {
      "get" : {
        "description" : "Retrieves one single vehicle from the /vehicle-id/ parameter and returns the vehicle encoded in JSON",
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the vehicle to get"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicle"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "You are not logged in"
          },
          "404" : {
            "description" : "Vehicle with vehicleId not found"
          }
        }
      }
    },
    "/vehicles/create" : {
      "put" : {
        "summary" : "Create a vehicle",
        "description" : "Creates a vehicle from the provided data in the requestbody",
        "tags" : [ "Vehicle" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/vehicle"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicle"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "PUT failed."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/{vehicle-id}/update" : {
      "put" : {
        "summary" : "Update a vehicle",
        "description" : "Updates one single vehicle from the /vehicle-id/ parameter",
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "The ID of the vehicle to get"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/vehicle"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "items" : {
                    "$ref" : "#/components/schemas/vehicle"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "PUT failed."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/{vehicle-id}/delete" : {
      "delete" : {
        "summary" : "Delete a vehicle",
        "description" : "Deletes a vehicle",
        "tags" : [ "Vehicle" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "vehicle-id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Numeric ID of the vehicle to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK with content (the deleted object in JSON)"
          },
          "204" : {
            "description" : "OK no content (no response)"
          },
          "400" : {
            "description" : "PUT failed."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    },
    "/vehicles/claim/" : {
      "put" : {
        "summary" : "Update a vehicle",
        "description" : "Claims (updates) one single vehicle from the /vehicle-id/ parameter",
        "tags" : [ "Vehicle" ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "items" : {
                  "$ref" : "#/components/schemas/vehicle-claim"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Claim created"
          },
          "400" : {
            "description" : "PUT failed (car might already be claimed)."
          },
          "401" : {
            "description" : "You are not logged in"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "vehicle" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "object",
            "items" : {
              "properties" : {
                "country" : {
                  "type" : "string"
                },
                "province" : {
                  "type" : "string"
                },
                "city" : {
                  "type" : "string"
                },
                "street" : {
                  "type" : "string"
                },
                "postal-code" : {
                  "type" : "string"
                }
              }
            }
          },
          "claimed-by" : {
            "description" : "Contains all present and future claims on the car",
            "type" : "object",
            "items" : {
              "properties" : {
                "user" : {
                  "type" : "object"
                },
                "timeslot" : {
                  "type" : "object",
                  "items" : {
                    "properties" : {
                      "start-time" : {
                        "type" : "object"
                      },
                      "end-time" : {
                        "type" : "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "vehicle-claim" : {
        "type" : "object",
        "properties" : {
          "vehicle-id" : {
            "type" : "integer"
          },
          "user-id" : {
            "type" : "integer"
          },
          "appointment-id" : {
            "type" : "integer"
          },
          "timeslot" : {
            "type" : "object",
            "items" : {
              "properties" : {
                "start-time" : {
                  "type" : "object"
                },
                "end-time" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    }
  }
}